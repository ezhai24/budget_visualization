mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
mutate(amount = 0)
template
losses
merge(losses, template)
merge(losses, template, by.x = c('year_quarter', 'year', 'quarter'))
merge(losses, template, by = c('year_quarter', 'year', 'quarter'))
merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
merge(losses, template, by = 'amount', all=TRUE)
merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
merge(losses, template, by = 'amount')
merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
cleaned_losses <- merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
cleaned_losses$amount.y[ is.na(cleaned_losses$amount.y) ] <- cleaned_losses$amount.x[ is.na(cleaned_losses$amount.y) ]
cleaned_losses
cleaned_losses$amount.x[ is.na(cleaned_losses$amount.x) ] <- cleaned_losses$amount.y[ is.na(cleaned_losses$amount.x) ]
cleaned_losses
cleaned_losses <- cleaned_losses %>% rename(amount.x = amount)
cleaned_losses <- cleaned_losses %>% rename(amount.x = 'amount')
cleaned_losses <- cleaned_losses %>% rename('amount.x' = 'amount')
cleaned_losses %>% rename(amount.x = amount)
cleaned_losses %>% rename(amount.x = amount)
cleaned_losses %>% rename(amount.x = test)
cleaned_losses %>% rename(amount.x = test)
rename(cleaned_losses, amount.x=amount)
cleaned_losses
rename(cleaned_losses, amount = amount.x)
cleaned_losses <- cleaned_losses %>% rename(amount = amount.x) %>% select(-amount.y)
cleaned_
cleaned_losses
losses <- filtered_transactions %>%
filter(amount <= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(amount = amount * -1) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
filter(year_quarter != 'Spring 2016', year_quarter != 'Summer 2016')
losses <- merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
losses$amount.x[ is.na(losses$amount.x) ] <- losses$amount.y[ is.na(losses$amount.x) ]
losses <- losses %>% rename(amount = amount.x) %>% select(-amount.y)
losses <- filtered_transactions %>%
filter(amount <= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(amount = amount * -1) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
filter(year_quarter != 'Spring 2016', year_quarter != 'Summer 2016')
losses
losses <- merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
losses
losses$amount.x[ is.na(losses$amount.x) ] <- losses$amount.y[ is.na(losses$amount.x) ]
losses
losses <- losses %>% rename(amount = amount.x) %>% select(-amount.y)
losses
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
runApp()
runApp()
runApp()
# import libraries
library(dplyr)
library(ggplot2)
library(shiny)
# set working directory
# setwd('C:/Users/Emily Zhai/Documents/Rugby/2017-2018 Treasury/Budget Visualization')
# read in transaction history file
transactions <- read.csv('transaction-history.csv')
# clean data
colnames(transactions) <- c('date', 'desc', 'amount', 'type', 'subtype')
transactions$date <- as.Date(transactions$date, format='%m/%d/%Y')
transactions <- transactions %>% mutate(month = format(date, '%m'))
transactions <- transactions %>%
mutate(year = ifelse(month == '12', paste(format(date, '%Y'), '-', as.numeric(format(date, '%Y')) + 1),
ifelse(month == '01' | month == '02', paste(as.numeric(format(date, '%Y')) - 1, '-', format(date, '%Y')), format(date, '%Y'))
))
transactions <- transactions %>%
mutate(quarter = ifelse(month == '09' | month == '10' | month == '11', '3Fall',
ifelse(month == '12'| month == '01' | month == '02', '4Winter',
ifelse(month == '03' | month == '04' | month == '05', '0Spring',
ifelse(month == '06' | month == '07' | month == '08', '1Summer', 'Error')
)
)
))
transactions <- transactions %>% select(-month)
# template with all the quarters
template <- transactions %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
mutate(amount = 0)
runApp()
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year))
filtered_transactions <- transactions
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year))
losses <- filtered_transactions %>%
filter(amount <= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(amount = amount * -1) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
filter(year_quarter != 'Spring 2016', year_quarter != 'Summer 2016')
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=earnings, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_text(data=earnings, aes(x=year_quarter, y=earnings, label=earnings), vjust=0) +
geom_area(data=losses, aes(x=year_quarter, y=losses, group=2, fill='Spent'), stat='identity', alpha=0.5)
earnings
runApp()
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_text(data=earnings, aes(x=year_quarter, y=amount, label=earnings), vjust=0) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5)
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_text(data=earnings, aes(x=year_quarter, y=amount, label=earnings), vjust=0)
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
runApp()
runApp()
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
earnings
losses
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
losses$year_quarter
earnings$year_quarter <- factor(template$year_quarter, levels = template$year_quarter[order(template$year)])
losses$year_quarter <- factor(template$year_quarter, levels = template$year_quarter[order(template$year)])
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
earnings$year_quarter
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
runApp()
filtered_transactions <- transactions
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year))
# total losses
losses <- filtered_transactions %>%
filter(amount <= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(amount = amount * -1) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
filter(year_quarter != 'Spring 2016', year_quarter != 'Summer 2016')
losses <- merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
losses$amount.x[ is.na(losses$amount.x) ] <- losses$amount.y[ is.na(losses$amount.x) ]
losses <- losses %>% rename(amount = amount.x) %>% select(-amount.y)
# sort
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year)])
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
earnings$year_quarter
losses$year_quarter
runApp()
earnings$year_quarter
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5)
losses$year_quarter
losses
losses %>% arrange(year)
losses$year_quarter[order(losses$year)]
losses %>% arrange(year)
losses %>% arrange(year, quarter)
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year, losses$quarter)])
losses$year_quarter
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year, earnings$quarter)])
losses$year_quarter <- factor(losses$year_quarter, levels = losses$year_quarter[order(losses$year, losses$quarter)])
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
losses$year_quarter
earnings$year_quarter
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year))
earnings <- merge(earnings, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
earnings$amount.x[ is.na(earnings$amount.x) ] <- earnings$amount.y[ is.na(earnings$amount.x) ]
earnings <- earnings %>% rename(amount = amount.x) %>% select(-amount.y)
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year))
earnings <- merge(earnings, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
earnings$amount.x[ is.na(earnings$amount.x) ] <- earnings$amount.y[ is.na(earnings$amount.x) ]
earnings <- earnings %>% rename(amount = amount.x) %>% select(-amount.y)
earnings$year_quarter <- factor(earnings$year_quarter, levels = earnings$year_quarter[order(earnings$year, earnings$quarter)])
ggplot() +
geom_area(data=earnings, aes(x=year_quarter, y=amount, group=1, fill='Earned'), stat='identity', alpha=0.5) +
geom_area(data=losses, aes(x=year_quarter, y=amount, group=2, fill='Spent'), stat='identity', alpha=0.5)
runApp()
runApp()
transcations %>% filter(type = 'Administrative')
transactions %>% filter(type = 'Administrative')
transactions %>% filter(type == 'Administrative')
transactions %>% filter(type == 'Administrative') %>% select(subtype)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(ggplot2)
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rio')
runApp()
runApp()
runApp()
install.packages('xlsx')
runApp()
runApp()
intsall.packages(rJava)
install.packages(rJava)
install.packages('rJava')
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(readxl)
install.packages('readxl')
install.packages("readxl")
shiny::runApp()
library(dplyr)
library(dplyr)
library(ggplot2)
library(shiny)
library(readxl)
install.packages("tidyverse")
library(dplyr)
library(ggplot2)
library(shiny)
library(readxl)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages('dplyr')
install.packages('dplyr')
runApp()
install.packages('ggplot2')
.libPaths()
.libPaths(c(.libPaths(), 'C:/R/lib'))
.libPaths()
library(dplyr)
library(shiny)
library(dplyr)
library(ggplot2)
library(shiny)
.libPaths()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages('plotly')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
transactions <- read_data()
# clean data
colnames(transactions) <- c('date', 'desc', 'amount', 'type', 'subtype')
transactions$date <- as.Date(transactions$date, format='%m/%d/%Y')
transactions <- transactions %>% mutate(month = format(date, '%m'))
transactions <- transactions %>%
mutate(year = ifelse(month == '12', paste(format(date, '%Y'), '-', as.numeric(format(date, '%Y')) + 1),
ifelse(month == '01' | month == '02', paste(as.numeric(format(date, '%Y')) - 1, '-', format(date, '%Y')), format(date, '%Y'))
))
transactions <- transactions %>%
mutate(quarter = ifelse(month == '09' | month == '10' | month == '11', '3Fall',
ifelse(month == '12'| month == '01' | month == '02', '4Winter',
ifelse(month == '03' | month == '04' | month == '05', '0Spring',
ifelse(month == '06' | month == '07' | month == '08', '1Summer', 'Error')
)
)
))
transactions <- transactions %>% select(-month)
# template with all the quarters
template <- transactions %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
mutate(amount = 0)
transactions <- read.csv('transaction-history.csv')
transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
# clean data
colnames(transactions) <- c('date', 'desc', 'amount', 'type', 'subtype')
transactions$date <- as.Date(transactions$date, format='%m/%d/%Y')
transactions <- transactions %>% mutate(month = format(date, '%m'))
transactions <- transactions %>%
mutate(year = ifelse(month == '12', paste(format(date, '%Y'), '-', as.numeric(format(date, '%Y')) + 1),
ifelse(month == '01' | month == '02', paste(as.numeric(format(date, '%Y')) - 1, '-', format(date, '%Y')), format(date, '%Y'))
))
transactions <- transactions %>%
mutate(quarter = ifelse(month == '09' | month == '10' | month == '11', '3Fall',
ifelse(month == '12'| month == '01' | month == '02', '4Winter',
ifelse(month == '03' | month == '04' | month == '05', '0Spring',
ifelse(month == '06' | month == '07' | month == '08', '1Summer', 'Error')
)
)
))
transactions <- transactions %>% select(-month)
# template with all the quarters
template <- transactions %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
mutate(amount = 0)
transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
runApp()
transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
earnings <- filtered_transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
earnings <- merge(earnings, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
earnings$amount.x[ is.na(earnings$amount.x) ] <- earnings$amount.y[ is.na(earnings$amount.x) ]
earnings <- earnings %>% rename(amount = amount.x) %>% select(-amount.y)
earnings <- transactions %>%
filter(amount >= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
arrange(year, quarter)
earnings <- merge(earnings, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
earnings$amount.x[ is.na(earnings$amount.x) ] <- earnings$amount.y[ is.na(earnings$amount.x) ]
earnings <- earnings %>% rename(amount = amount.x) %>% select(-amount.y)
earnings
earnings %>% arrange(year, quarter)
runApp()
runApp()
earnings <- merge(earnings, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
earnings$amount.x[ is.na(earnings$amount.x) ] <- earnings$amount.y[ is.na(earnings$amount.x) ]
earnings <- earnings %>% rename(amount = amount.x) %>% select(-amount.y) %>% arrange(year, quarter)
earnings
earnings
losses <- transactions %>%
filter(amount <= 0) %>%
group_by(year, quarter) %>%
summarize(amount = sum(amount)) %>%
mutate(amount = amount * -1) %>%
mutate(year_quarter = paste(substring(quarter, 2), year)) %>%
filter(year_quarter != 'Spring 2016', year_quarter != 'Summer 2016')
losses <- merge(losses, template, by = c('year_quarter', 'year', 'quarter'), all=TRUE)
losses$amount.x[ is.na(losses$amount.x) ] <- losses$amount.y[ is.na(losses$amount.x) ]
losses <- losses %>% rename(amount = amount.x) %>% select(-amount.y) %>% arrange(year, quarter)
losses
expens
expenses$amount - losses$amount
earnings$amount - losses$amount
earnings$difference <- earnings$amount - losses$amount
earnings
runApp()
install.packages('lucr')
runApp()
runApp()
runApp()
runApp()
runApp()
ifelse(0 == 0, paste0('hi', world), paste0('bye', 'world'))
ifelse(0 == 0, paste0('hi', 'world'), paste0('bye', 'world'))
runApp()
paste('hi', ifelse(0==0, 'world', 'emily'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
getOptions('repos')
rsconnect::setAccountInfo(name='ezhai24', token='7ED2365C3B9E870B6F6DD628B454726E', secret='8x9D+CBGcb6dTZPAG+EnsklA8T6H9ruP4e+vaqMl')
library(rsconnect)
getOption("repos")
devtools::install_github("rstudio/rsconnect")
install.packages('devtools')
devtools::install_github("rstudio/rsconnect")
shiny::runApp()
